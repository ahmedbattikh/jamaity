
services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8081:80"
    volumes:
      - .:/var/www/html
    depends_on:
      - backend
      - database
    environment:
      - DATABASE_URL=mysql://root:password@database:3306/jamaity?serverVersion=8.0&charset=utf8mb4

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "9000:9000"
    volumes:
      - .:/var/www/html
    depends_on:
      - database
    environment:
      - DATABASE_URL=mysql://root:password@database:3306/jamaity?serverVersion=8.0&charset=utf8mb4
      - APP_ENV=dev
    command: ["/bin/bash", "-c", "configure-opcache.sh && composer install --no-scripts && (php bin/console doctrine:database:create --if-not-exists || true) && (php bin/console doctrine:migrations:migrate --no-interaction || true) && echo 'Starting PHP-FPM...' && exec php-fpm -F"]

###> doctrine/doctrine-bundle ###
  database:
    image: mysql:${MYSQL_VERSION:-8.0}
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-password}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-jamaity}
      MYSQL_USER: ${MYSQL_USER:-app}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-password}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/mysql:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/mysql:rw
###< doctrine/doctrine-bundle ###

volumes:
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
